# config.yaml

# General configuration 
general:
  # data_path: "C:/Users/Sidewinders/Desktop/CODE/UAV_Classification_repo/src/.datasets/UAV_Dataset_9"
  data_path: "/app/src/datasets/UAV_Dataset_9"
  model_name: "MIT/ast-finetuned-audioset-10-10-0.4593"
  batch_size: 8
  seed: 42
  num_cuda_workers: 0
  num_classes: 9
  epochs: 10
  save_model: false
  project_name: "AST_Sweeps"
  sweep_count: 10000
  test_size: 0.2
  inference_size: 0.1
  val_size: 0.1
  shuffled : true
  accumulation_steps: 3
  learning_rate: 0.001
  patience : 3
  num_train_transforms: 3
  augmentation_probability: 0.5 
  # augmentations: ["PitchShift", "TimeStretch", "AddGaussianNoise", "Shift", "TimeMask", "Reverse", "Normalize", "GainTransition", "PolarityInversion", "Gain"]
  augmentations: ["PitchShift", "TimeStretch"]

# WandB solo run configutation (precedence over General)
wandb:
  project: "AST Augmentations"
  name: "Find-tuning the best audio augmentation stack"
  reinit: false
  notes: "available options: PitchShift, TimeStretch, AddGaussianNoise, Shift, TimeMask, Reverse, Normalize, GainTransition, PolarityInversion, Gain"
  tags: "AST, "
  dir : "C:/Users/Sidewinders/Desktop/CODE/UAV_Classification_repo/notebooks/wandb"


# WandB sweep configuration
sweep:
  name: "AST : pitchShift & timeStretch auto-tune"
  method: "random"
  metric:
    name: "test_acc"
    goal: "maximize"
  parameters:
    learning_rate:
      values: [0.006]
    num_augmentations:
      values: [2]
    num_train_transforms:
      distribution: int_uniform
      min: 1
      max: 3
    pitchShift_min_semitones:
      values: [[-12.0], [-9.0], [-6.0],[-3.0], [0]]
    pitchShift_max_semitones:
      values: [[0], [3.0],[6.0],[9.0], [12.0]]
    timeStretch_min_rate:
      values: [[0.1],[0.5],[0.8],[0.9]]
    timeStretch_max_rate:
      values: [[0.9],[1],[1.1],[1.25],[1.5],[1.75],[2]]
    
    
    
      # distribution: int_uniform
      # min: 0
      # max: 8

