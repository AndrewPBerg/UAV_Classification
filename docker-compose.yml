services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DOCKER_BUILDKIT=1
    image: ast_container
    container_name: ast_script_container
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DEBIAN_FRONTEND=noninteractive
      - WANDB_API_KEY=${WANDB_API_KEY}
      - BOT_TOKEN=${BOT_TOKEN}
      - CHAT_ID=${CHAT_ID}
      - CUDA_VISIBLE_DEVICES=0,1  # Both GPUs for distributed training
      # NCCL configuration for distributed training
      # - NCCL_DEBUG=INFO           # Enable NCCL debugging
      - NCCL_SHM_DISABLE=1        # Disable shared memory to avoid /dev/shm issues
      - NCCL_P2P_DISABLE=1        # Disable P2P if needed for stability
      - NCCL_IB_DISABLE=1         # Disable InfiniBand
      - TORCH_NCCL_BLOCKING_WAIT=1 # Enable blocking wait for better error reporting

    volumes:
      - ./src:/app/src  # Only mount the src directory as read-only
      - ./src/datasets/.:/app/src/datasets
      - ./src/model_cache:/app/src/model_cache  # Mount the model_cache directory
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2  # Use both GPUs
              capabilities: [gpu]  # Simplified capabilities
    # command: python3 script.py
    # command: python3 main.py
    command: python3 sweeps.py
    # command: /bin/bash # interactive shell new
    stdin_open: true
    tty: true
    working_dir: /app/src  # Change this to /app/src
    # user: "appuser"
    user: root
    # Shared memory configuration for distributed training
    shm_size: 2gb  # Increase shared memory for NCCL
    ipc: host      # Use host IPC namespace for better GPU communication
    networks:
      - app_network

    # shm_size: 8gb  # Removed shared memory allocation used for DDP

volumes:
  datasets:
    driver: local
  src:  # Add this named volume
  model_cache:  # Add this named volume

networks:
  app_network:
    driver: bridge

# Add a .env file with the following content to set default compose options
# COMPOSE_COMMAND_OPTIONS=--remove-orphans